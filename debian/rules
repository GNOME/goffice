#!/usr/bin/make -f
# -*- makefile -*-
# Based on the sample debian/rules that uses debhelper which was originally
# written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a dh-make
# output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# GOffice takes care of this itself:
# # Ensure the build aborts when there are still references to undefined
# # symbols.
# LDFLAGS += -Wl,-z,defs

# Make the linker work a bit harder so dynamic loading can be done faster
LDFLAGS += -Wl,-O1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

confflags :=    -v

# FHS locations
confflags +=	--prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info

# Compiler, language dialect
confflags +=    --enable-iso-c \
                --enable-compile-warnings=maximum

# Features
confflags +=    

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	confflags += --build $(DEB_HOST_GNU_TYPE)
else
	confflags += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

# shared library versions, option 1
#version=2.0.5
#major=2

# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
version=`ls goffice/.libs/libgoffice*.so.* | \
 awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
major=`ls goffice/.libs/libgoffice*.so.* | \
 awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

upstreamversion=$(shell dpkg-parsechangelog | grep Version | head -1 | sed -e 's/Version: //g' -e 's/-[A-Za-z0-9\.]*$$//g')

source-updates:
	# Update files/links generated by autotools
	env srcdir=`pwd` NOCONFIGURE=1 sh autogen.sh
	# Replace links by copies of their targets
	for file in `find -type l` ; do \
		tf=`tempfile` && \
		install -p $$file $$tf && \
		rm -f $$file && \
		install -p $$tf $$file && \
		rm -f $$tf ; \
	done
	rm -rf autom4te.cache

config-stamp:
	dh_testdir

	rm -rf build && mkdir build
	cd build && env "CFLAGS=$(CFLAGS)" "LDFLAGS=$(LDFLAGS)" ../configure $(confflags)

	touch config-stamp


build: build-stamp
build-stamp: config-stamp
	dh_testdir

	$(MAKE) -C build

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f config-stamp build-stamp

	-$(MAKE) -C build distclean
	rm -rf build
	rm -f config.cache config.status
	-find -type f -name 'Makefile.am' | sed -e 's/\.am$$//' | xargs rm -f

	# Update config.{sub,guess} from autotools-dev, if possible.
	-for f in config.sub config.guess ; do \
		if test -r /usr/share/misc/$$f ; then \
			OLDDATE=`./$$f -t | tr -d -` ; \
			NEWDATE=`/usr/share/misc/$$f -t | tr -d -` ; \
			if [ $$OLDDATE -lt $$NEWDATE ] ; then \
				echo "GNU config automated update of $$f (replacing $$OLDDATE with $$NEWDATE)" 1>&2 ; \
				cp -f /usr/share/misc/$$f $$f ; \
			fi; \
		fi; \
	done

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	$(MAKE) -C build DESTDIR=$(CURDIR)/debian/tmp install 

	# FIXME: where do we put the debug for the plugins?
	mkdir -p $(CURDIR)/debian/tmp/usr/lib/debug
	for l in `find $(CURDIR)/debian/tmp/usr/lib -name '*.so*'`; do \
		cp -vdf $$l $(CURDIR)/debian/tmp/usr/lib/debug ; \
	done

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i
	dh_installdocs -i

	dh_installexamples -i
	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
	dh_installmime -i
#	dh_installinit -i
	dh_installcron -i
#	dh_installman -i
	dh_link -i
	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs ChangeLog -i
	dh_gconf -i
	dh_scrollkeeper -i
	dh_desktop -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -v -i -- -VUpstream-Version=$(upstreamversion)
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs

	rm -rvf $(CURDIR)/debian/libgoffice-1-dbg/usr/share/doc/libgoffice-1-dbg
	dh_link -plibgoffice-1-dbg /usr/share/doc/libgoffice-1/ /usr/share/doc/libgoffice-1-dbg
	#dh_link -plibgoffice-1-dev /usr/share/doc/libgoffice-1-dev/html/goffice/ /usr/share/gtk-doc/html/goffice

	dh_installexamples
	dh_install --sourcedir=debian/tmp --list-missing
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip -v -Nlibgoffice-1-dbg
	dh_compress

	dh_buildinfo

	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs -plibgoffice-1 -V 'libgoffice-1 (>= $(upstreamversion))'
	dh_installdeb
	dh_shlibdeps -l debian/libgoffice-1/usr/lib/ -L libgoffice-1
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
