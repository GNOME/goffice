    To report libgoffice bugs, please visit bugzilla.gnome.org.

    This file is used as a scratch pad by developers.  It is a list of known
issues that need to be addressed.  Divided into, things that will prevent
release, and longer term bugs.

-------------------------------------------------------------------------------
Release Critical
----------------

    : src/cut-n-paste-code/goffice/gui-utils/go-format-sel.c:
	g_warning ("TESTING TESTING 123 res = '%s'", res ? res : "(null)");

    goffice/goffice/graph/gog-graph.c uses pointers as quarks.  That cannot
    work.

    goffice/goffice/utils/go-format.c: go_format_value don't use the format
    argument.

TODO
----
    0) Move gnome depends into a plugin
	0.1) egg-recent-files
    1) Format and number match rewrite
	: Why does the number matching bother comparing against formats that are
	  covered by 'General' ?
	: When applying a currency symbol we need to store the NON-localized id.
	: hour month and year format strings need to be internationalized.
	    eg tt:ss instead of hh:ss for other locales.
	: formats with AM/PM need to be internationalized.
	: We do not format fractional seconds correctly.
	: Parsing should handle embedded strings
	: It incorrectly accepts mmm:ss as some sort of minute spec.
	: When entering "ppp/qqq" into a cell with non-fractional format, do not
	make it a fraction.
	: Consider adding "%" to entry text when typing a text with a percentage
	format.  (I.e., user has "44%" in cell and presses "5" -- that causes
	"5%" to be shown the the cursor between "5" and "%".)

    2) GOActionComboText
	2.1) stub						(DONE)	
	2.2) Move to TreeModel to simplify sharing
	2.3) Support custom menu item
    3) Plugin Framework
	3.1) "De-activate all" should take the dependency tree
	    into account and handle the python loader last.
	- i18n support for third-party plugins.
	- Add extra info (authors, etc.) to XML file.
	- Beautify ErrorInfo dialog (it's ugly).
	- Mark plugin as "broken" if deactivation failed.
	3.2) pluginize paste types
	3.3) plugin manager needs dependency tracking.  (Deactivate
	  all python plugins before the python loader, for example.)

1) graphs
    1.1) Split plot xml file engine, type, and family plugins	(DONE)
    1.2) Use the registered engines to create plots		(DONE)
    1.3) XML
	1.3.1) Use libglade code parse GObject properties	(DONE)
	1.3.2) remove GdkColor from boxed type support		(DONE)
	1.3.3) Walk GogObject tree and build DOM		(DONE)
	1.3.4) Build GogObject treee from DOM			(DONE)
	1.3.5) For flagged properties store value in DOM	(DONE)
	1.3.6) Read properties from DOM				(DONE)
	1.3.7) XMLWriter interface for extra object content 	(DONE)
	1.3.8) Use it for series				(DONE)
	1.3.9) Extend GOData to support deserialization		(DONE)
	1.3.10) Implement deserialization for GnmData		(DONE)
	1.3.11) Use the XMLWriter for series for all datasets	(DONE)
	1.3.12) Persist names					(DONE)
	1.3.13) Use XMLWriter for properties of type object	(DONE)
	1.3.14) implement it for styles				(DONE)
	1.3.15) position
	1.3.16) image data
    1.4) Decide on model vs view structure			(DONE)
    1.5) Graph Guru						(DONE)
	1.5.1) update when someone else changes the model	(DONE)
	1.5.2) remove prop pages for deleted items		(DONE)
	1.5.3) Keep state::chart,plot safe for typeselector	(DONE)
	       in case they get deleted
	1.5.4) Allow going backwards if there is only chart	(DONE)
    1.6) data allocator in gnumeric				(DONE)
	1.6.1) initial interface				(DONE)
	1.6.2) generalize container to be a DataSet		(DONE)
	1.6.3) editor to specify pref for vector or scalar	(DONE)
    1.7) Single point formating
	1.7.1) Basic						(DONE)
	1.7.2) Improve selection of single points for pies	(DONE)
    1.8) data sources						(DONE)
	1.8.1) vector and scalar data sources from gnumeric	(DONE)
	1.8.2) Add min/max elements to vector			(DONE)
	1.8.3) const scalar value				(DONE)
	1.8.4) const scalar string				(DONE)
	1.8.5) const vector value				(DONE)
	1.8.6) const vector string				(DONE)
	1.8.7) translation of const vector strings		(DONE)
    1.9) Pie Plot						(DONE)
	1.9.1) Make the segments curve				(DONE)
	1.9.2) extracted segments				(DONE)
	1.9.3) Rings						(DONE)
	1.9.4) extracting single wedges				(DONE)
	1.9.5) formating single wedges				(DONE)
    1.10) Bar/Col Plot						(DONE)
	1.10.1) merge bar/col stack type bools into 1 enum	(DONE)
	1.10.2) normal						(DONE)
	1.10.3) stacked						(DONE)
	1.10.4) percentage					(DONE)
	1.10.5) Skip over bars/cols when too narrow
	1.10.6) Work around bleed through with overlap 100	(DONE)
	1.10.7) Check for short vectors				(DONE)
	1.10.8) Clip when values are out of range		(DONE)
	1.10.9) Support vary style by element for type=normal
    1.11) Line/Area Plot					(DONE)
	1.11.1)	Normal						(DONE)
	1.11.2)	Stacked						(DONE)
	1.11.3)	Percentage					(DONE)
	1.11.4)	sub type with no-marker by default		(DONE)
	1.11.5) center points on X index values for Line	(DONE)
	1.11.6) handle missing points in unstacked lines	(DONE)
    1.12) X/Y (Scatter) Plot
	1.12.1) Add simple implementation			(DONE)
	1.12.2) Take marker sizes into account at bounds	(DONE)
	1.12.3) Bounds on 1 axis explicitly clip the other
	1.12.4) Splined interpolation				(DONE)
	1.12.5) Bubbles 					(DONE)
    1.13) Decide on recalc strategy				(DONE)
	1.13.1) Getting data from sheet -> graphs		(DONE)
	1.13.2) linking unlinking				(DONE)
    1.14) Axis management
	1.14.1) Charts/plots have axis layout type		(DONE)
	1.14.2) Add any missing axis when chart type is set	(DONE)
	1.14.3) Remove any existing axis that do not correspond	(DONE)
		to chart type.
	1.14.2) Life cycle of plots/axis to maintain connection	(DONE)
	1.14.3) UI for adding an axis				(DONE)
	1.14.4) Only permit removal of unused axes		(DONE)
	1.14.6) Create plot1.5d as base for bar/col & line	(DONE)
	1.14.7) do range allocation and filtering in chart	(DONE)
	1.14.7) Draw ticks and allocate space for them		(DONE)
	1.14.8) Make the major labels optional			(DONE)
	1.14.9) Add a font selector to the editor		(DONE)
	1.14.10) Value formating (at least percentage and date)	(DONE)
	1.14.11) Support index type axis			(DONE)
	1.14.12) Use a map function (log, invert, date)		(DONE)
	1.14.13) Allow a plot to select a different axis	(DONE)
	1.14.14) Filter add plot in guru to matching types	(DONE)
	1.14.15) Editor for min/max/major/minor			(DONE)
	1.14.16) Respect user supplied min/max/major/minor	(DONE)
	1.14.17) Draw major ticks in				(DONE)
	1.14.18) Draw major ticks out				(DONE)
	1.14.19) Draw minor ticks in				(DONE)
	1.14.20) Draw minor ticks out				(DONE)
	1.14.21) Why don't we honour selected font ?		(DONE)
	1.14.22) Selectable label format for non-discrete data	(DONE)
	1.14.23) Editor for label format			(DONE)
	1.14.24) Persist label format				(DONE)
	1.14.25) Auto selection of label format			(DONE)
    1.15) per series plot type specific data			(DONE)
    1.16) libart based render akin to guppicanvas.		(DONE)
	1.16.1) Solid background fills				(DONE)
	1.16.2) Gradient fills 					(DONE)
	1.16.3) Pattern fills					(DONE)
	1.16.4) Image fills					(DONE)
	1.16.5) path						(DONE)
	1.16.6) text						(DONE)
	1.16.7) markers						(DONE)
	1.16.8) Rework text drawing to _not_ use libart		(DONE)
	1.16.9) Add anchor flags to draw_text			(DONE)
	1.16.10) Clip text to keep it in bounds			(DONE)
    1.19) Precedence						(DONE)
	1.19.1) Sort GogObject::children 			(DONE)
	1.19.2) Keep corresponding views in sync		(DONE)
	1.19.3) Have guru maintain order for add/remove		(DONE)
	1.19.4) api for changing order				(DONE)
	1.19.5) Extend Guru to support changing precedence	(DONE)
    1.20) GogStyle Editor page
	1.20.1) fill type					(DONE)
	    1.20.1.1) none					(DONE)
	    1.20.1.2) solid					(DONE)
	    1.20.1.3) basic gradients				(DONE)
	    1.20.1.4) advanced gradients via combo		(DONE)
	    1.20.1.5) pixmaps fills				(DONE)
	    1.20.1.6) patterns					(DONE)
	1.20.2) outline line pattern
	1.20.3) font selector					(DONE)
	1.20.4) Support 'auto' settings				(DONE)
	    1.20.4.1) outline (colour)				(DONE)
	    1.20.4.2) line (color)				(DONE)
	    1.20.4.3) fill (colors)	 			(DONE)
	    1.20.4.4) marker 					(DONE)
	1.20.5) image selector
	    1.20.5.1) drag destination for background images
	    1.20.5.2) scale image preview                       (DONE)
	    1.20.5.3) Use file selector with image preview	(DONE)
	1.20.6) De-sensitize (out)line colour when size == -1
    1.21) themes
	1.21.1) Actually use the themes to initialize styles	(DONE)
	1.21.2) load from xml
	1.21.3) selector for graphs
	1.21.4) How to change a graph's theme
	1.21.5) Use Roles rather than Types to enumerate	(DONE)
	1.21.5) Allow type aliases				(DONE)
    1.22) Legend
	1.22.1) Set up cardinality framework.			(DONE)
	1.22.2) Get things to update when chart changes		(DONE)
	1.22.2) smarter layout
    1.23) Layout engine
	1.23.1) In ChartView::size_allocate use the positions	(DONE)
	1.23.2) For compass placement use the alignment flags	(DONE)
	1.23.3) support NW, NE, SW, SE				(DONE)
	1.23.4) Move ChartView::size_allocate -> GogView	(DONE)
	1.24.5) Have Graph, Chart, Legend and Axis use it	(DONE)
	1.23.6) Add some notion of padding			(DONE)
	1.23.7) remove request_valid				(DONE)
	1.23.8) pass in available space				(DONE)
	1.23.9) How to support axis labels (siblings need
		common residual)
	1.23.10) Create a common base for outlined objects	(DONE)
    1.24) Sizing units						(DONE)
	1.24.1) Have the legend use pts to size swatches	(DONE)
	1.24.2) Test renderers mapping between pts & pixels	(DONE)
    1.25) Printing						(DONE)
	1.25.1) gog-renderer-gnomeprint				(DONE)
	1.25.2) sheet object wrapper for printing		(DONE)
	1.25.3) paths						(DONE)
	1.25.4) solid and empty polygons			(DONE)
	1.25.5) image filled polygons				(DONE)
	1.25.6) gradient filled polygons			(DONE)
	1.25.7) measure text					(DONE)
	1.25.8) draw text					(DONE)
	1.25.9) why doesn't text appear in preview		(DONE)
	1.25.10) why is font selection bogus			(DONE)
	1.25.11) text anchors					(DONE)
	1.25.12) Check the zoom handling for fonts		(DONE)
    1.26) Move 'use_one_style' from pie -> plot with 1 series	(DONE)
    1.27) Add a flag to gobject to go with its role indicating	(DONE)
	whether the instance was autocreated or assigned.
    1.28) Rethink GraphItem lifecyle to simplify removal	(DONE)
    1.29) Extend GogObjectRole to include more handlers		(DONE)
    1.30) Grid Object
	1.30.1) Create						(DONE)
	1.30.2) Theme it					(DONE)
	1.30.3) Add or remove it depending on chart axis set	(DONE)
	1.30.4) Render background				(DONE)
	1.30.5) Support grid lines (added to axis)		(DONE)
	1.30.6) XLS import of grid lines
	1.30.7) XLS export of grid lines
    1.31) SVG Render
	1.31.1) Paths						(DONE)
	1.31.2) Solid Fills					(DONE)
	1.31.3) Gradient Fills					(DONE)
	1.31.4) Pattern Fills					(DONE)
	1.31.5) Image Fills					(DONE)
	1.31.6) Markers						(DONE)
	1.31.7) Text						(DONE)
	1.31.8) Text alignment					(DONE)
	1.31.9) Text clipping					(DONE)
    1.32) Radar plots
	1.32.1) line						(DONE)
	1.32.2) area						(DONE)
	1.32.3) axis labels					(DONE)
	1.32.4) fix xls import of marker vs no marker
    1.33) Contour plots				{Jean}
	1.33.1) Initial implementation				(DONE)
	1.33.2) GOMatrix					(DONE)
	1.33.3) Axis changes
	1.33.4) XLS import					(DONE)
	1.33.4) XLS export

Misc things to fix
------------------

	: Open guru, click on forward, then back. Now navigating through plot
	list is very slow. That's because at each object addition/removal in
	object tree, an object editor is created.

	: Current GogGrid object is not used for grid display. We should rename
        it to GogBackplane, GogWall or GogBackground.
